---
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  State machine connected an API gateway that runs TA on a provided job and returns the data and a graph

# https://gist.github.com/cam8001/1304705aa013a48719ecc3ff253aa981
# https://medium.com/mindorks/building-webhook-is-easy-using-aws-lambda-and-api-gateway-56f5e5c3a596

Globals:
  Function:
    Timeout: 30

Resources:
  JobScan:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 1_job_scan/
      Handler: job_scan.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-python38-pydantic:4
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /ta
            Method: post
  GetSymbolData:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 2_get_symbol_data/
      Handler: get_symbol_data.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - arn:aws:lambda:ap-southeast-2:036372598227:layer:yfinance:3
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-pandas:1
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-numpy:1
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-lxml:1
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-requests:1
  RunTA:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 3_run_ta/
      Handler: run_ta.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - arn:aws:lambda:ap-southeast-2:036372598227:layer:yfinance:3
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-pandas:1
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-numpy:1
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-lxml:1
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-requests:1
  GenerateGraph:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 4_generate_graph/
      Handler: generate_graph.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - arn:aws:lambda:ap-southeast-2:036372598227:layer:yfinance:3
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-pandas:1
        - arn:aws:lambda:ap-southeast-2:770693421928:layer:Klayers-p38-matplotlib:3
      Policies:
        - Statement:
            - Sid: TabotGenerategraphS3MfersGraphs
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
              Effect: Allow
              Resource:
                - arn:aws:s3:::mfers-graphs/*
                - arn:aws:s3:::mfers-graphs
  CalculateConfidence:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 5_calculate_confidence/
      Handler: calculate_confidence.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
  Notify:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 6_notify/
      Handler: notify.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - arn:aws:lambda:ap-southeast-2:036372598227:layer:pushover:1
      Policies:
        - Statement:
            - Sid: TabotNotifySsmGetparameter
              Action:
                - ssm:GetParameter
              Effect: Allow
              Resource:
                - arn:aws:ssm:ap-southeast-2:036372598227:parameter/tabot/*

  TABotApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev

  TABotStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: STANDARD
      DefinitionUri: statemachine/ta-automation.asl.json
      DefinitionSubstitutions:
        JobScanArn: !GetAtt JobScan.Arn
        GetSymbolDataArn: !GetAtt GetSymbolData.Arn
        RunTAArn: !GetAtt RunTA.Arn
        GenerateGraphArn: !GetAtt GenerateGraph.Arn
        CalculateConfidenceArn: !GetAtt CalculateConfidence.Arn
        NotifyArn: !GetAtt Notify.Arn
      Events:
        ValidationApiEvent:
          Type: Api
          Properties:
            Method: post
            Path: /ta
            RestApiId:
              Ref: TABotApi
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref JobScan
        - LambdaInvokePolicy:
            FunctionName: !Ref GetSymbolData
        - LambdaInvokePolicy:
            FunctionName: !Ref RunTA
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateGraph
        - LambdaInvokePolicy:
            FunctionName: !Ref CalculateConfidence
        - LambdaInvokePolicy:
            FunctionName: !Ref Notify

  SlackBotFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: slackbot/
      Handler: slackbot.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - arn:aws:lambda:ap-southeast-2:036372598227:layer:slack_bolt:2
      Environment:
        Variables:
          SLACK_BOT_TOKEN: "{{resolve:ssm:/tabot/slack/bot_key}}"
          SLACK_SIGNING_SECRET: "{{resolve:ssm:/tabot/slack/signing_token}}"
      Events:
        Post:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#ap
          Properties:
            RestApiId:
              Ref: SlackbotWebhookApiGateway
            Path: /ta
            Method: POST
      Policies:
        - Statement:
            - Sid: SlackbotSelfInvoke
              Action:
                - lambda:InvokeFunction
                - lambda:GetFunction
              Effect: Allow
              Resource:
                # needs permission to call itself so it can ack in <3 seconds and then actually do the thing
                # https://github.com/slackapi/bolt-python/issues/556
                - arn:aws:lambda:ap-southeast-2:036372598227:function:ta-automation-SlackBotFunction*
        - Statement:
            - Sid: TABotStateMachineList
              Action:
                - states:ListStateMachines
                - states:ListTagsForResource
                - states:DescribeExecution
              Effect: Allow
              Resource: arn:aws:states:ap-southeast-2:036372598227:*:*
        - Statement:
            - Sid: TABotStateMachineInvoke
              Action:
                - states:StartExecution
              Effect: Allow
              Resource: !GetAtt TABotStateMachine.Arn
              #Resource: arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:*:

  SlackbotWebhookApiGateway:
    Type: AWS::Serverless::Api
    DependsOn: SlackBotFunction
    Properties:
      Name: SlackbotWebhook
      StageName: dev
      DefinitionBody:
        openapi: "3.0.1"
        info:
          version: "1.0"
          title: "SlackBot Webhook"
        paths:
          /ta:
            post:
              responses: {}
              x-amazon-apigateway-integration:
                uri:
                  # You need to build up the ARN with this pattern - you can't just use a !Ref or !GetAtt AFAIK.
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SlackBotFunction.Arn}/invocations
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                contentHandling: "CONVERT_TO_TEXT"
                type: "aws_proxy"

Outputs:
  HttpApiUrl:
    Description: URL of your API endpoint
    Value:
      Fn::Sub: "https://${SlackbotWebhookApiGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/dev/"
  HttpApiId:
    Description: Api id of HttpApi
    Value:
      Ref: SlackbotWebhookApiGateway
